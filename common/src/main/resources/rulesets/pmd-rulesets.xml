<?xml version="1.0"?>
<ruleset name="Apache Commons Imaging PMD ruleset"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
    <description>This PMD ruleset checks education online spring cloud code</description>
    <!-- alibaba p3c -->
    <rule ref="rulesets/java/ali-comment.xml"/>
    <rule ref="rulesets/java/ali-concurrent.xml"/>
    <rule ref="rulesets/java/ali-constant.xml"/>
    <rule ref="rulesets/java/ali-exception.xml"/>
    <rule ref="rulesets/java/ali-flowcontrol.xml"/>
    <rule ref="rulesets/java/ali-naming.xml"/>
    <rule ref="rulesets/java/ali-oop.xml"/>
    <rule ref="rulesets/java/ali-orm.xml"/>
    <rule ref="rulesets/java/ali-other.xml"/>
    <rule ref="rulesets/java/ali-set.xml"/>

    <!-- basic pmd rulesets -->
    <rule ref="rulesets/java/basic.xml">
        <exclude name="CollapsibleIfStatements"/>
    </rule>
    <rule ref="rulesets/java/braces.xml"/>
    <rule ref="rulesets/java/clone.xml"/>
    <rule ref="rulesets/java/codesize.xml"/>
    <rule ref="rulesets/java/comments.xml"/>
    <rule ref="rulesets/java/controversial.xml">
        <exclude name="AtLeastOneConstructor"/>
    </rule>
    <rule ref="rulesets/java/design.xml">
        <exclude name="ConstantsInInterface"/>
        <exclude name="AvoidDeeplyNestedIfStmts"/>
        <exclude name="AvoidReassigningParameters"/>
        <exclude name="ConfusingTernary"/>
        <exclude name="EmptyMethodInAbstractClassShouldBeAbstract"/>
        <exclude name="GodClass"/>
        <!-- PMD seems to want only break, not return -->
        <exclude name="MissingBreakInSwitch"/>
        <exclude name="ReturnEmptyArrayRatherThanNull"/>
        <exclude name="SimplifyBooleanReturns"/>
        <exclude name="SwitchStmtsShouldHaveDefault"/>
        <exclude name="UnnecessaryLocalBeforeReturn"/>
    </rule>
    <rule ref="rulesets/java/empty.xml">
        <!-- empty if statements are useful to skip actions taken by the else (if(s)) -->
        <exclude name="EmptyIfStmt"/>
    </rule>
    <rule ref="rulesets/java/finalizers.xml"/>
    <rule ref="rulesets/java/imports.xml"/>
    <rule ref="rulesets/java/junit.xml"/>
    <rule ref="rulesets/java/logging-jakarta-commons.xml"/>
    <rule ref="rulesets/java/logging-java.xml"/>
    <rule ref="rulesets/java/migrating.xml"/>
    <rule ref="rulesets/java/naming.xml"/>
    <rule ref="rulesets/java/optimizations.xml">
        <exclude name="AvoidInstantiatingObjectsInLoops"/>
        <exclude name="RedundantFieldInitializer"/>
        <exclude name="PrematureDeclaration"/>
    </rule>
    <rule ref="rulesets/java/strictexception.xml"/>
    <rule ref="rulesets/java/strings.xml">
        <exclude name="AvoidDuplicateLiterals"/>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml">
        <!-- Parentheses are useful for grouping subexpressions -->
        <exclude name="UselessParentheses"/>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml"/>
</ruleset>